# EogdMusicPlayer 配置文件

# HTTP 文件服务器设置
httpServer:
  enabled: true # 是否启用内置 HTTP 服务器以提供资源包 (true/false)
  port: 8123 # HTTP 服务器监听的端口
  publicAddress: "" # 服务器的公共IP地址或域名。如果留空，插件会尝试自动检测，但可能不准确。
  # 对于外部访问，强烈建议手动设置此项，例如："your.server.ip" 或 "your.domain.com"
  servePath: "musicpacks" # 资源包在URL中的路径前缀，例如 http://<publicAddress>:<port>/musicpacks/pack.zip
  tempDirectory: "temp_packs" # 存储临时生成的资源包的子目录 (在插件数据文件夹内)
  maxDownloadSizeBytes: 0 # 单个音频文件下载的最大允许大小（字节）。0 表示无限制。例如: 10485760 (10MB)
  downloadConnectTimeoutMillis: 5000 # 下载音频文件时的连接超时时间（毫秒）
  downloadReadTimeoutMillis: 10000   # 下载音频文件时的读取超时时间（毫秒）
  musicRoomInactiveCleanupDelaySeconds: 600 # 音乐室在无人且无活动后自动关闭的延迟时间（秒）

# 资源包相关设置
resourcePack:
  packFormat: 34 # 资源包格式版本。Minecraft 1.21.x 对应 34。请根据你的服务器版本调整。
  # 1.20.5-1.20.6 -> 32, 1.20.3-1.20.4 -> 26, 1.20.2 -> 18, 1.20-1.20.1 -> 15
  description: "§bEogdMusicPlayer §7音乐资源包" # 资源包的描述文本
  enablePresetPrewarming: false # 是否在插件启动/重载时为预设歌曲提前生成资源包 (true/false)
  # 开启后，预设歌曲加载更快，但会占用少量启动时间和磁盘空间。

# 基础资源包合并设置 (如果启用，插件会将音乐添加到此基础包中，而不是创建独立的音乐包)
baseResourcePack:
  enableMerging: false # 是否启用与基础资源包的合并模式 (true/false)
  fileName: "base_pack.zip" # 基础资源包的文件名，应放置在插件的数据文件夹内。
  promptMessage: "§6加载音乐资源包..." # 发送合并后的音乐资源包给玩家时显示的提示信息
  originalPackPromptMessage: "§6恢复默认资源包..." # 当停止音乐并恢复到原始基础包时显示的提示信息

# GUI 相关设置
gui:
  title: "§9音乐播放器" # GUI 的标题
  noPresets: "§c没有可用的预设歌曲。" # 当没有预设歌曲时在GUI中显示的消息
  prevPageName: "§c<- 上一页" # 上一页按钮的名称
  nextPageName: "§a下一页 ->" # 下一页按钮的名称
  prevPageItem: "ARROW" # 上一页按钮的物品材质 (区分大小写, 参考 Spigot Material 枚举)
  nextPageItem: "ARROW" # 下一页按钮的物品材质

# 预设歌曲列表
# 每首歌曲是一个独立的配置节 (例如 'song1', 'song2')
# name: 歌曲在GUI和命令中显示的名称 (支持颜色代码 '&')
# url: 歌曲的 .ogg 文件直链 URL
# item: 在GUI中代表这首歌的物品材质 (区分大小写, 参考 Spigot Material 枚举)
# lore: 物品的描述文本列表 (支持颜色代码 '&')
presetSongs:
  song1:
    name: "§e示例歌曲 1"
    url: "https://example.com/music/song1.ogg" # 请替换为有效的 .ogg 文件链接
    item: "MUSIC_DISC_CAT"
    lore:
      - "§7点击播放这首美妙的歌曲！"
      - "§7流派: 流行"
  song2:
    name: "§b自定义音乐 §7(演示)"
    url: "https://example.com/music/another_song.ogg" # 请替换为有效的 .ogg 文件链接
    item: "MUSIC_DISC_BLOCKS"
    lore:
      - "§a这是一首通过配置添加的歌曲。"
      - "§7URL: <url>" # 你可以在lore中使用 <url> 占位符，它不会被自动替换，仅作展示
  # 你可以在这里添加更多歌曲...
  # song3:
  #   name: "§d史诗音乐"
  #   url: "YOUR_OGG_FILE_DIRECT_LINK_HERE"
  #   item: "MUSIC_DISC_MELLOHI"
  #   lore:
  #     - "§7感受这史诗般的旋律！"

# 消息配置 (所有消息都支持颜色代码 '&')
# <placeholder> 会被替换为实际值
messages:
  general:
    playerOnly: "§c此命令只能由玩家执行。"
    noPermission: "§c你没有权限执行此命令。"
    invalidUrl: "§c提供的URL无效或无法访问。"
    httpDisabled: "§cHTTP服务器未启用，无法播放在线音乐。"
    basePackMissing: "§c错误：基础资源包 'base_pack.zip' 在插件文件夹中缺失，但合并模式已启用。请添加基础包或禁用合并模式。"
    basePackReapplyFailed: "§c尝试恢复基础资源包失败。"
    downloadFailedResponse: "§c下载音频文件失败，服务器响应无效。URL: <url>"
    fileTooLarge: "§c音频文件过大 (<size>MB)，无法下载。URL: <url>" # <size> 会被替换
    downloadException: "§c下载音频文件时发生网络错误。URL: <url>"

  bf: # /bf 命令相关消息
    usage: |-
      §e用法: /bf <子命令> [参数...]
      §7可用子命令: play, playurl, stop, gui, createroom, join, start, roomplay, disbandroom, reload, info
    unknownCommand: "§c未知子命令。输入 /bf 获取帮助。"
    play:
      usage: "§e用法: /bf play <歌曲名称或编号>"
      notFound: "§c未找到名为 '<song>' 的预设歌曲。"
      preparing: "§7正在准备播放预设歌曲: <song_name>§7..."
    playurl:
      usage: "§e用法: /bf playurl <URL>"
    stop:
      notPlaying: "§e你当前没有在播放任何音乐。"
      stoppedForSelf: "§a已为你停止播放音乐。"
      stoppedForSelfInRoom: "§a已为你停止在房间 '<room_description>§a' 中的音乐。"
      roomStopped: "§a音乐室 '<room_description>§a' 的音乐已停止。"
    createroom:
      usage: "§e用法: /bf createroom <音乐URL> <房间描述>"
      noDescription: "§c请输入房间描述。"
      alreadyCreated: "§c你已经创建了一个音乐室: <room_description>§c。请先解散它。"
      successWithStartHint: "§a音乐室 '<description>§a' 已创建！音乐URL: <url>§a。使用 §e/bf start §a来开始播放。"
      broadcast: "§e玩家 <creator_name> §e创建了音乐室: <description>"
    join:
      usage: "§e用法: /bf join <房主名称>"
      roomNotFound: "§c未找到由 '<creator>' 创建的音乐室。"
      alreadyCreator: "§e你已经是音乐室 '<room_description>§e' 的创建者了。"
      alreadyMember: "§e你已经是音乐室 '<room_description>§e' 的成员了。"
      successNoAutoPlay: "§a已加入音乐室: <room_description>§a。等待房主开始播放。"
      leftOtherRoom: "§7已自动离开你之前所在的音乐室: <other_room_description>"
      internalRoomNotFound: "§c内部错误：尝试加入的房间未找到。"
    room:
      start:
        notRoomCreator: "§c你不是任何音乐室的创建者，无法启动音乐。"
        noMusicUrl: "§c你的音乐室 '<room_description>§c' 没有设置音乐URL。"
        startingMusic: "§7房间 '<room_description>§7' 正在准备播放音乐..."
        memberStartNotification: "§e房主 <creator_name> §e在房间 '<room_description>§e' 中开始了音乐播放！"
        started: "§a已在你的音乐室 '<room_description>§a' 中开始播放音乐。"
      play:
        notRoomCreator: "§c你不是任何音乐室的创建者，无法设置音乐。"
        usage: "§e用法: /bf roomplay <新音乐URL>"
        urlSet: "§a音乐室 '<room_description>§a' 的音乐URL已更新为: <url>"
        urlSame: "§e新URL与当前音乐室 '<room_description>§e' 的URL相同。"
        startHint: "§7使用 §e/bf start §7来播放新音乐。"
    disbandroom:
      notCreatorOrNoRoom: "§c你没有创建音乐室，或你的音乐室已被解散。"
      success: "§a音乐室 '<room_description>§a' 已成功解散。"
      notifyMemberRoomDisbanded: "§e你所在的音乐室 '<room_description>§e' 已被房主解散。"
    reload:
      success: "§aEogdMusicPlayer 配置已重载。"
    info: {} # /bf info 使用硬编码格式

  playurl: # /playurl 命令相关消息 (如果与 /bf playurl 不同)
    usage: "§e用法: /playurl <URL>"
    preparing: "§7正在准备播放URL音乐..."
    packCreationFailed: "§c无法创建音乐资源包。"
    error: "§c播放音乐时发生错误。"

  resourcePack:
    status:
      accepted: "§a资源包请求已接受，正在下载..."
      successfully_loaded: "§a音乐资源包加载成功！"
      declined: "§c你拒绝了音乐资源包。将无法播放音乐。"
      failed: "§c音乐资源包下载失败或加载出错。"

  musicRoomClosedMessage: "§7音乐室 '<description>§7' 因长时间不活动已被自动关闭。"
